<?php
namespace app\index\controller;

use app\index\model\Users;
use think\Controller;
use think\Db;
use think\Loader;
use think\Validate;

class Test extends Controller{
    public function _initialize()
    {
        parent::_initialize(); // TODO: Change the autogenerated stub
        echo 'init','<br>';
    }
    //前置执行方法，按顺序执行
    //TODO ？前置方法的使用场景
    protected $beforeActionList = [
        'three','first','second'=>['only'=>'test2'],
    ];

    protected function first(){
        echo 'first','<br>';
//        exit(json_encode(['status'=>200,'msg'=>'success']));
    }
    protected function second(){
        echo 'second','<br>';
    }
    protected function three(){
        echo 'three','<br>';
    }

    public function test(){
        echo 'test','<br>';
    }

    public function test2($id){
        if($id==1){
            $this->success('成功');
        }else{
            $this->error('失败');
        }
    }

    public function base($id){
        echo 'test base','<br>';
        $name = 'test'.$id;
        $this->$name();
        return view();
//        $id = $this->request;
    }
    public function url_test(){
        return 'url_test:456';
    }

    //调用其他控制器的方法
    public function test4(){
        $dyb = controller('project.dyb');
        echo $dyb->detail();
    }
    //调用其他控制器方法
    public function test5(){
        echo 'test5';
        action('project.dyb/detail');
    }
    public function test6(){
        echo 'test6';
        return view();
    }

    public function test7(){
        $request = request();
        print_r($request->isGet());
        print_r($request->url(true));
        print_r($request->domain());
        dump($request->dispatch());
        var_dump($request);
    }

    public function test8(){
//        $data = Db::query('select * from users');
//        $data = DB::table('users')->where('id',1)->find();
//        $data = db('users')->where('id',1)->find();
//        $data = db('users')->where('id',1)->value('email');
//        $data = db('users')->column('email');
        /*$data = db('users')->chunk(1,function ($users){
            //数据处理
        });*/
        $data = db('users')->page(2,2)->cache(true,60)->select();
        var_dump($data);
        return ['status'=>200,'message'=>'success'];
    }

    public function test9(){
//        $users = Users::get(1);
//        $users = Users::all([1,2,3]);
//        $users = model(Users)::get(1);
//        echo $users->updated_at;
//        var_dump($users->email);
//        $users->name = 'test1112';
//        $users->save();
//        echo $users->updated_at;
//        Users::destroy(1);
//        $data = Users::get(1);
        $data = base64_encode('a123456'.rand(10,99));
        var_dump($data);
        $aa = base64_decode($data);
        var_dump(substr($aa,0,-2));
    }
    public function test10(){
        $aa =Validate::is('aaa','date');
        dump($aa);
        $data = [
            'name'=>'123456',
            'email'=>'thinkphp'
        ];
        $validate = Loader::validate('User');
        if(!$validate->check($data)){
            dump($validate->getError());
        }
    }

    public function test11(){
        //1:$a,2:$b,3:$c,4:$d,5:$e,6:$f,7:$g,8:$h,9:$i,10:$j
    }

    //当路由链接地址是正确的，但是指定的操作方法没有的时候，或调用_empty方法，可以先设置一个默认页面
    public function _empty(){
        echo 'empty';
        return view('Public/default');
    }
}